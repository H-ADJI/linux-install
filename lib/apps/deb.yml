- name: Installing Nala
  hosts: localhost
  become: true
  become_user: "{{ user }}"
  tasks:
    - name: Install Nala package
      ansible.builtin.apt:
        name: nala
        state: present
        update_cache: yes
    - name: Update package list using Nala
      ansible.builtin.command:
        cmd: nala update
    - name: Upgrade packages using Nala
      ansible.builtin.command:
        cmd: nala upgrade -y
    - name: Install nala completion
      become_user: "{{ user }}"
      ansible.builtin.command:
        cmd: nala --install-completion zsh

- name: Installing apps from the public Deb repo
  hosts: localhost
  become: true
  become_user: "{{ user }}"
  tasks:
    - name: Ensure system is updated using Nala
      ansible.builtin.command:
        cmd: nala update

    - name: Install utilities using Nala
      ansible.builtin.command:
        cmd: "nala install -y {{ item }}"
      loop:
        - curl
        - wget
        - xclip
        - btm
        - git
        - sed
        - unzip
        - adb
        - stow
        - tmux
        - htop
        - tree
        - vlc
        - zsh
        - jq
        - build-essential
        - cargo
        - neofetch
        - ripgrep
        - direnv
        - pipewire
        - fd-find
        - solaar
        - ranger
        - eza
        - bat
        - sway
        - python312-venv

- name: Download and install multiple .deb packages using Nala
  hosts: localhost
  become: true
  become_user: "{{ user }}"
  vars:
    deb_packages:
      - {
          name: "fastfetch",
          url: https://github.com/fastfetch-cli/fastfetch/releases/download/2.32.1/fastfetch-linux-amd64.deb,
        }
      - {
          name: "vscode",
          url: https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64,
        }
      - {
          name: "delta",
          url: https://github.com/dandavison/delta/releases/download/0.18.2/git-delta-musl_0.18.2_amd64.deb,
        }
      - {
          name: "slack",
          url: https://downloads.slack-edge.com/desktop-releases/linux/x64/4.41.105/slack-desktop-4.41.105-amd64.deb,
        }
  tasks:
    - name: Download .deb package
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "/tmp/{{ item.name }}.deb"
        mode: "0644"
      loop: "{{ deb_packages }}"
      loop_control:
        label: "{{ item.name }}" # Display the package name in the output
    - name: Install the downloaded .deb package using Nala
      ansible.builtin.command:
        cmd: "nala install -y /tmp/{{ item.name }}.deb"
      loop: "{{ deb_packages }}"
      loop_control:
        label: "{{ item.name }}" # Display the package name in the output
    - name: Remove the downloaded .deb package
      ansible.builtin.file:
        path: "/tmp/{{ item.name }}.deb"
        state: absent
      loop: "{{ deb_packages }}"
      loop_control:
        label: "{{ item.name }}" # Display the package name in the output

- name: Install Python 3.10 from private apt repo
  hosts: localhost
  become: true
  become_user: "{{ user }}"
  tasks:
    - name: Add the deadsnakes PPA for Python 3.10 (Ubuntu-specific)
      ansible.builtin.apt_repository:
        repo: ppa:deadsnakes/ppa
        state: present

    - name: Update apt package cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Python 3.10 and required dependencies
      ansible.builtin.command:
        cmd: "nala install -y {{ item }}"
      loop:
        - python3.10
        - python3.10-venv
        - python3.10-dev
    - name: Verify Python 3.10 installation
      ansible.builtin.command:
        cmd: python3.10 --version
      register: python_version
      changed_when: false

- name: Install Spotify
  hosts: localhost
  become: true
  become_user: "{{ user }}"
  tasks:
    - name: Download and add Spotify GPG key
      ansible.builtin.shell: |
        curl -sS https://download.spotify.com/debian/pubkey_6224F9941A8AA6D1.gpg | sudo gpg --dearmor --yes -o /etc/apt/trusted.gpg.d/spotify.gpg
      args:
        creates: /etc/apt/trusted.gpg.d/spotify.gpg

    - name: Add Spotify repository
      ansible.builtin.shell: echo "deb http://repository.spotify.com stable non-free" | sudo tee /etc/apt/sources.list.d/spotify.list
      args:
        creates: /etc/apt/sources.list.d/spotify.list

    - name: Ensure system is updated using Nala
      ansible.builtin.command:
        cmd: nala update

    - name: Install Spotify client
      ansible.builtin.command:
        cmd: "nala install -y spotify-client"
